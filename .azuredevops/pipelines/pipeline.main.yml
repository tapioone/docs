resources:
  repositories:
    - repository: DeploymentRepository
      type: git
      name: tapio.Deployment
      ref: master

trigger:
  branches:
    include:
      - master

variables:
  appDirectory: $(System.DefaultWorkingDirectory)
  appArtifactName: app
  infrastructureDirectory: $(System.DefaultWorkingDirectory)/.azuredevops/infrastructure
  infrastructureArtifactName: infrastructure
  nodeJsVersionSpec: 16.x

pool:
  # AzureStaticWebApp@0 requires Docker to be installed
  vmImage: ubuntu-22.04

stages:
  - stage: build_app
    dependsOn: []
    jobs:
      - job:
        displayName: build
        steps:
          - checkout: self
            clean: true

          - task: NodeTool@0
            inputs:
              versionSpec: ${{ variables.nodeJsVersionSpec }}

          - task: Npm@1
            displayName: "npm ci"
            inputs:
              command: ci
              workingDir: ${{ variables.appDirectory }}

          - task: Npm@1
            displayName: "npm run build"
            inputs:
              command: custom
              customCommand: "run build"
              workingDir: ${{ variables.appDirectory }}

          - publish: ${{ variables.appDirectory }}/build
            artifact: ${{ variables.appArtifactName }}
            displayName: publish artifact ${{ variables.appArtifactName }}

  - stage: build_infrastructure
    dependsOn: []
    jobs:
      - job:
        displayName: build
        variables:
          mainBicepFilePath: ${{ variables.infrastructureDirectory }}/main.bicep
        steps:
          - checkout: self
            clean: true
            fetchDepth: 1

          - task: AzureCLI@2
            displayName: az bicep restore
            inputs:
              azureSubscription: tapio Dev/Test Subscription
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: bicep restore ${{ variables.mainBicepFilePath }}

          - pwsh: |
              az bicep build --file ${{ variables.mainBicepFilePath }}
              az bicep build-params -f ${{ variables.infrastructureDirectory }}/main.preview.bicepparam
              az bicep build-params -f ${{ variables.infrastructureDirectory }}/main.prod.bicepparam
            displayName: az bicep build
            failOnStderr: true

          - publish: ${{ variables.infrastructureDirectory }}
            artifact: ${{ variables.infrastructureArtifactName }}
            displayName: publish artifact ${{ variables.infrastructureArtifactName }}

  - stage: whitesource
    dependsOn: []
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: BuildTemplates/jobs/whitesource.yml@DeploymentRepository
        parameters:
          productName: github.com/tapioone
          projectName: github.com/tapioone/docs
          scanDirectory: ${{ variables.appDirectory }}
          preSteps:
            - task: Npm@1
              displayName: "npm ci"
              inputs:
                command: ci
                workingDir: ${{ variables.appDirectory }}

  - stage: deploy_preview
    dependsOn:
      - build_infrastructure
      - build_app
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    variables:
      - group: Docs-common
      - group: Docs-preview
    jobs:
      - deployment: infrastructure
        environment: Docs-preview
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: template.deploy-infrastructure.yml
                  parameters:
                    serviceConnectionName: tapio-devtest(SPN)
                    artifactName: ${{ variables.infrastructureArtifactName }}
                    resourceGroupName: $(ResourceGroupName)
                    paramFileName: main.preview.json
      - deployment: app
        dependsOn: infrastructure
        environment: Docs-preview
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: template.deploy-app.yml
                  parameters:
                    artifactName: ${{ variables.appArtifactName }}


  - stage: deploy_prod
    dependsOn:
      - deploy_preview
    variables:
      - group: Docs-common
      - group: Docs-prod
    jobs:
      - deployment: infrastructure
        environment: Docs-prod
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: template.deploy-infrastructure.yml
                  parameters:
                    serviceConnectionName: tapio-prod(SPN)
                    artifactName: ${{ variables.infrastructureArtifactName }}
                    resourceGroupName: $(ResourceGroupName)
                    paramFileName: main.prod.json
      - deployment: app
        dependsOn: infrastructure
        environment: Docs-prod
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - template: template.deploy-app.yml
                  parameters:
                    artifactName: ${{ variables.appArtifactName }}
